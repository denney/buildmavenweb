<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- 引入属性配置文件 -->
	<context:property-placeholder
		ignore-unresolvable="true" location="classpath*:/application.properties" />

	<!-- mysql -->
	<bean id="dataSource" class="org.apache.tomcat.jdbc.pool.DataSource"
		destroy-method="close">
		<!-- 数据库信息 -->
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />

		<!-- 链接池信息：最大活跃数、最大空闲数 -->
		<property name="maxActive" value="${jdbc.pool.maxActive}" />
		<property name="maxIdle" value="${jdbc.pool.maxIdle}" />
		<property name="defaultAutoCommit" value="false" />
		
<!-- 		连接Idle一个小时后超时(配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒)
 -->		<property name="timeBetweenEvictionRunsMillis" value="3600000" />
		<property name="minEvictableIdleTimeMillis" value="3600000" />

		<!-- 验证连接有效与否的SQL，不同的数据配置不同
		用来检测连接是否有效的sql，要求是一个查询语句。如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会其作用。 推荐使用SELECT 1
		 --><property name="validationQuery" value="SELECT 1" />
		<!-- 这里建议配置为TRUE，防止取到的连接不可用 
		申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。 -->
		<property name="testOnBorrow" value="true" />
		<!-- 归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能 -->
		<property name="testOnReturn" value="true" />
<!-- 		建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效
 -->		<property name="testWhileIdle" value="true" />
	</bean>
	
	<!-- Oracle -->
<!-- 	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		数据库信息
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />

		链接池信息：最大活跃数、最大空闲数
		<property name="maxActive" value="40" />
		<property name="maxIdle" value="${jdbc.pool.maxIdle}" />
		<property name="defaultAutoCommit" value="false" />
		
		连接Idle一个小时后超时(配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒)
		<property name="timeBetweenEvictionRunsMillis" value="3600000" />
		<property name="minEvictableIdleTimeMillis" value="3600000" />

		验证连接有效与否的SQL，不同的数据配置不同
		用来检测连接是否有效的sql，要求是一个查询语句。如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会其作用。 推荐使用SELECT 1
		<property name="validationQuery" value="SELECT 1 from dual" />
		这里建议配置为TRUE，防止取到的连接不可用 
		申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
		<property name="testOnBorrow" value="true" />
		归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
		<property name="testOnReturn" value="true" />
		建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效
		<property name="testWhileIdle" value="true" />
	</bean> -->

	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- 自动扫描entity目录, 省掉Configuration.xml里的手工配置 -->
		<property name="typeAliasesPackage" value="com.spring.demo.mybatis.model" />
		<!-- 显式指定Mapper文件位置 -->
		<property name="mapperLocations" value="classpath:/mybatis/*.xml" />
	</bean>

	<!-- 扫描basePackage下所有以@MyBatisRepository标识的 接口 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.spring.demo.mybatis.dao" />
	</bean>
</beans>