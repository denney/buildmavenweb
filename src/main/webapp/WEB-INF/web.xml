<!DOCTYPE web-app PUBLIC
 "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"
 "http://java.sun.com/dtd/web-app_2_3.dtd" >

<web-app xmlns="http://java.sun.com/xml/ns/javaee"  
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"    
   xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_3_0.xsd"  
   version="3.0">
	<display-name>Archetype Created Web Application</display-name>

	<!-- 加载配置文件 -->
	<!--contextConfigLocation在 ContextLoaderListener类中的默认值是 /WEB-INF/applicationContext.xml -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>
			classpath:/spring-*.xml
		</param-value>
	</context-param>
	<!-- 配置listener启动spring -->
	<listener>
		<listener-class>
			org.springframework.web.context.ContextLoaderListener
		</listener-class>
	</listener>

	<!-- spring mvc中实际起到拦截、分发、路程控制的是 DispatcherServlet类-->
	<servlet>
		<servlet-name>springServlet</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<!-- 初始化spring mvc 配置文件 -->
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath:/spring-mvc.xml</param-value>
		</init-param>
		<!-- 标示启动容器时初始化Servlet -->
		<load-on-startup>1</load-on-startup>
	</servlet>
	<!-- 表示对应的哪些请求交给spring mvc处理 -->
	<servlet-mapping>
		<servlet-name>springServlet</servlet-name>
		<!-- "/"表示默认所有的请求都通过servlet映射，如"*.html"表示拦截所有以html为扩展名的请求 -->
		<url-pattern>/</url-pattern>
	</servlet-mapping>

</web-app>
